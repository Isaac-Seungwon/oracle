-- ex28_modeling.sql

/*
	데이터베이스 설계
	1. 요구사항 수집 및 분석
	2. 개념 데이터 모델링
	3. 논리 데이터 모델링
	4. 물리 데이터 모델링
	5. 데이터베이스 구축(구현)

	데이터 모델링
	- 데이터 모델링은 요구 분석을 기반으로 분석하여 저장 구조를 만들고 도식화하는 것이다.
	- 도식화를 하면서 나오는 대표적인 산출물은 ERD이다.
	- 데이터 모델링은 최종적으로 ERD를 만드는 작업이라고 생각하면 된다.
	- 데이터를 저장하기 위한 데이터 구조를 설계하는 작업이다.
	
	
	개념 / 논리 / 물리 다이어그램
	개념 다이어그램은 아주 간단한 표현의 설계도로, 테이블 이름 + 속성 + 관계 정도만을 기술한다.
	논리 다이어그램은 개념 다이어그램을 구체적으로 만든 것이다. 관계형 데이터베이스의 기본 설정을 정의한다. 속성(자료형, 길이) + 도메인 정의 + 키 등등을 정의하며, 개념 다어어그램에서 잘못된 것들을 이 때 재조정한다.
	물리 다이어그램은 논리에서 만들어진 결과물을 최종적으로 디테일하게 한 것이다. 물리적 식별자 + 모든 것들을 실제 DBMS에 맞춰서 현실화시키는 작업을 한다.
	
	ERD (Entity Relationship Diagram)
	ERD는 엔티티의 관계를 표현한 그림으로, 데이터베이스 모델링 기법 중 하나이다.
	손으로 그리기도 하고, 오피스, 전문툴(eXERD, ER-Win, 온라인 툴)을 사용하여 만들기도 한다.
	

	Entity
	릴레이션 = 레코드(테이블) = 엔티티 = 인스턴스 = 객체
	엔티티는 다른 Entity와 분류(구분)될 수 있고, 다른 Entity에 대해 정해진 관계를 맺을 수 있는 데이터 단위이다.
	엔티티와 릴레이션을 테이블이라고 표현하기도 하지만, 데이터 하나를 구현하는 표현이기 때문에 테이블보다는 레코드라고 하는 게 맞는 표현이다.
		a. 학생 정보 관리
			- 정보 수집: 아이디, 학생명, 나이, 주소, 연락처 등..
			- 학생(아이디, 학생명, 나이, 주소, 연락처)
		b. 강의실 정보 관리
			- 정보 수집: 강의실명, 크기, 인원 수, 용도 등..
			- 강의실(강의실명, 크기, 인원 수, 용도)
			
	Attribute
	속성은 엔티티를 구성하는 구성 요소이다.
	속성은 컬럼이며, 속성의 집합이 바로 엔티티이다.
	
	관계 (Relation)
	하나의 엔티티 안에 들어있는 속성들은 서로 관계가 있다.
	
	
	비디오 대여점
	1. 엔티티 정의
		- 장르
		- 비디오
		- 회원
		- 대여(?)
		
	2. 속성 정의
		
	3. 기본키 정의
	
	4. 관계 맺기
	
	5. 논리 다이어그램
		- 개념 모델(ERD)에 스키마를 추가하는 작업을 한다.
	
		1. 엔티티(사걱형)만을 찾아서 모두 만든다.
	
	6. 물리 다이어그램
	
	산출물
	a. ERD(개념 모델링)
	b. 논리 다이어그램
	c. 물리 다이어그램

	
	-----------------------------
	
	모델링 작업 > ERD > 올바르게 했는지 검증하는 작업 > 정규화
	
	정규화 (Normalization)
	
	정규화(Nomalization)는 자료의 손실이나 불필요한 정보를 없애고, 데이터의 일관성을 유지하며, 데이터의 종속성을 최소화해주기 위해 ERD를 수정하는 작업이다.
	쉽게 말해 모델링 작업을 하면서 만들어진 ERD를 올바르게 했는지 검증하는 작업이다.
	정규화를 하면 ERD의 안정성이 높아지고, 작업하기 편하게 바뀐다.
	우리가 만든 테이블(ERD)를 비정형 상태 또는 비 정규화 상태라고 말한다. 이를 정규화 과정을 통해 올바르게 수정하고 고치고 나면 정규화 상태라고 한다.
	대부분의 개발자들은 만들 때부터 정규화를 하면서 만든다.
	제 1 정규화, 제 2 정규화, 제 3 정규화, 
	
	
	관계형 데이터베이스 시스템이 지향하는 데이터베이스의 상태
	1. 최대한 null을 가지지 않는다.
	2. 중복값을 가지지 않는다.
	3. 원자값을 가진다.
	
	이런 것을 추구하는 게 정규화 작업이다. 다시 말하자면 이를 위반하는 것을 발견하여 없애버리는 게 정규화 작업이다.
	
	정규화 목적
	1. null 최대한 제거
	2. 중복값 제거
	3. 복합값 제거
	4. 자료의 삽입 이상, 갱신 이상, 삭제 이상 현상 제거
	
	이상 현상
	이상 현상은 테이블을 잘못 설계했을 때 발생하는 현상이다.
	정규화를 거치면 이상 현상이 모두 사라진다.
	
	1. 삽입 이상 (Insertion Anomaly)
	특정 테이블에 데이터를 삽입할 때 원하지 않는 데이터까지 같이 넣어야 하는 상황
	
	2. 갱신 이상 (Update Anomaly)
	동일한 데이터가 2개 이상의 테이블에 동시 저장되는 상황
	동일한 데이터 중 1개는 수정했지만, 다른 1개를 수정하지 못하면 둘 중 어느 것이 올바른 데이터인지 판단하지 못하는 상황이 생긴다.
	
	3. 삭제 이상 (Deletion Anomaly)
	특정 테이블에서 데이터를 삭제할 때 원하지 않는 데이터까지 같이 삭제하는 상황

*/




























